% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CalculateTextStructure_updatedTSP.R
\name{CalculateTextStructure_updatedTSP}
\alias{CalculateTextStructure_updatedTSP}
\title{Speed, volume and circuitousness calculation}
\usage{
CalculateTextStructure_updatedTSP(
  corpus,
  input_words,
  type_of_window = "sentence",
  window_length = 250,
  include_extension_speed = FALSE,
  include_extension_volume = FALSE
)
}
\arguments{
\item{corpus}{This includes the file you want to analysis. The text must be contained in column "text" (or it woundn't work)}

\item{input_words}{This is the embedding you want to use. Default embedding is fastText English embedding ("https://dl.fbaipublicfiles.com/fasttext/vectors-crawl/cc.en.300.bin.gz"). If you want to create your own embedding, the first column must be "word" and contain the actual words; next columns should specify the embeddings}

\item{type_of_window}{Default="sentence". Two alternative values, "sentence" or "length". "length" means that you want to divide the text with exactly the length of words. And 'sentence' means that your dividing never break a sentence in the middle point but finish the sentences instead.}

\item{window_length}{Int, While type_of_window="length", it will divided the text with the length of exactly this value. Here you could set the length of windows=1 and type_of_window="length" to seperate the text with each sentence}

\item{include_extension_speed}{Include additional result or not. Default=False.(If True, then speed of program may be slow)}

\item{include_extension_volume}{Include additional volumn or not. Default=False.(If True, then speed of program may be slow)}
}
\value{
The speed, volume and circuitousness of the text.
}
\description{
Speed, volume and circuitousness calculation
}
\examples{
library(rStoryShape)
load("data/ft_model_test.Rdata")
load("data/corpus.Rdata")
for (i in seq_len(nrow(last_sheet_data))) {
try_result <- tryCatch(
  {
    df_sin<-as.data.frame(last_sheet_data[i,])
    text <- as.data.frame(last_sheet_data[i,2])
    result <- CalculateTextStructure_updatedTSP(text,input_words=ft_model,type_of_window = 'length',window_length = 10)
    result_combined <- cbind(
      df_sin,
      result[[1]][c('speed', 'volume', 'circuitousness')]
    )
    final_return_df <- rbind(final_return_df, result_combined)
    print(i)
  },
  error = function(err) {
    cat("Error occurred for row", i, ": ", conditionMessage(err), "\n")
  }
)
print(final_return_df)

if (inherits(try_result, "try-error")) {
  cat("Skipping row", i, "\n")
}
}
}
